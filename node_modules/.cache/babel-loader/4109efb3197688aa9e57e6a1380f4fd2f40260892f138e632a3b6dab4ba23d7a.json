{"ast":null,"code":"\"use strict\";\n\n/** @typedef {import(\"./index.js\").MinimizedResult} MinimizedResult */\n\n/** @typedef {import(\"./index.js\").CustomOptions} CustomOptions */\n\n/**\r\n * @template T\r\n * @param {import(\"./index.js\").InternalOptions<T>} options\r\n * @returns {Promise<MinimizedResult>}\r\n */\nasync function minify(options) {\n  const {\n    name,\n    input,\n    inputSourceMap,\n    extractComments\n  } = options;\n  const {\n    implementation,\n    options: minimizerOptions\n  } = options.minimizer;\n  return implementation({\n    [name]: input\n  }, inputSourceMap, minimizerOptions, extractComments);\n}\n/**\r\n * @param {string} options\r\n * @returns {Promise<MinimizedResult>}\r\n */\n\nasync function transform(options) {\n  // 'use strict' => this === undefined (Clean Scope)\n  // Safer for possible security issues, albeit not critical at all here\n  // eslint-disable-next-line no-param-reassign\n  const evaluatedOptions =\n  /**\r\n   * @template T\r\n   * @type {import(\"./index.js\").InternalOptions<T>}\r\n   * */\n  // eslint-disable-next-line no-new-func\n  new Function(\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\", `'use strict'\\nreturn ${options}`)(exports, require, module, __filename, __dirname);\n  return minify(evaluatedOptions);\n}\nmodule.exports = {\n  minify,\n  transform\n};","map":{"version":3,"names":["minify","options","name","input","inputSourceMap","extractComments","implementation","minimizerOptions","minimizer","transform","evaluatedOptions","Function","exports","require","module","__filename","__dirname"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/terser-webpack-plugin/dist/minify.js"],"sourcesContent":["\"use strict\";\r\n\r\n/** @typedef {import(\"./index.js\").MinimizedResult} MinimizedResult */\r\n\r\n/** @typedef {import(\"./index.js\").CustomOptions} CustomOptions */\r\n\r\n/**\r\n * @template T\r\n * @param {import(\"./index.js\").InternalOptions<T>} options\r\n * @returns {Promise<MinimizedResult>}\r\n */\r\nasync function minify(options) {\r\n  const {\r\n    name,\r\n    input,\r\n    inputSourceMap,\r\n    extractComments\r\n  } = options;\r\n  const {\r\n    implementation,\r\n    options: minimizerOptions\r\n  } = options.minimizer;\r\n  return implementation({\r\n    [name]: input\r\n  }, inputSourceMap, minimizerOptions, extractComments);\r\n}\r\n/**\r\n * @param {string} options\r\n * @returns {Promise<MinimizedResult>}\r\n */\r\n\r\n\r\nasync function transform(options) {\r\n  // 'use strict' => this === undefined (Clean Scope)\r\n  // Safer for possible security issues, albeit not critical at all here\r\n  // eslint-disable-next-line no-param-reassign\r\n  const evaluatedOptions =\r\n  /**\r\n   * @template T\r\n   * @type {import(\"./index.js\").InternalOptions<T>}\r\n   * */\r\n  // eslint-disable-next-line no-new-func\r\n  new Function(\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\", `'use strict'\\nreturn ${options}`)(exports, require, module, __filename, __dirname);\r\n  return minify(evaluatedOptions);\r\n}\r\n\r\nmodule.exports = {\r\n  minify,\r\n  transform\r\n};"],"mappings":"AAAA,YAAY;;AAEZ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAeA,MAAMA,CAACC,OAAO,EAAE;EAC7B,MAAM;IACJC,IAAI;IACJC,KAAK;IACLC,cAAc;IACdC;EACF,CAAC,GAAGJ,OAAO;EACX,MAAM;IACJK,cAAc;IACdL,OAAO,EAAEM;EACX,CAAC,GAAGN,OAAO,CAACO,SAAS;EACrB,OAAOF,cAAc,CAAC;IACpB,CAACJ,IAAI,GAAGC;EACV,CAAC,EAAEC,cAAc,EAAEG,gBAAgB,EAAEF,eAAe,CAAC;AACvD;AACA;AACA;AACA;AACA;;AAGA,eAAeI,SAASA,CAACR,OAAO,EAAE;EAChC;EACA;EACA;EACA,MAAMS,gBAAgB;EACtB;AACF;AACA;AACA;EACE;EACA,IAAIC,QAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAG,wBAAuBV,OAAQ,EAAC,CAAC,CAACW,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,CAAC;EAC3J,OAAOhB,MAAM,CAACU,gBAAgB,CAAC;AACjC;AAEAI,MAAM,CAACF,OAAO,GAAG;EACfZ,MAAM;EACNS;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}