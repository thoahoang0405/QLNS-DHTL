{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar ruleModules = require('../dotjs'),\n  toHash = require('./util').toHash;\nmodule.exports = function rules() {\n  var RULES = [{\n    type: 'number',\n    rules: [{\n      'maximum': ['exclusiveMaximum']\n    }, {\n      'minimum': ['exclusiveMinimum']\n    }, 'multipleOf', 'format']\n  }, {\n    type: 'string',\n    rules: ['maxLength', 'minLength', 'pattern', 'format']\n  }, {\n    type: 'array',\n    rules: ['maxItems', 'minItems', 'items', 'contains', 'uniqueItems']\n  }, {\n    type: 'object',\n    rules: ['maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames', {\n      'properties': ['additionalProperties', 'patternProperties']\n    }]\n  }, {\n    rules: ['$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if']\n  }];\n  var ALL = ['type', '$comment'];\n  var KEYWORDS = ['$schema', '$id', 'id', '$data', '$async', 'title', 'description', 'default', 'definitions', 'examples', 'readOnly', 'writeOnly', 'contentMediaType', 'contentEncoding', 'additionalItems', 'then', 'else'];\n  var TYPES = ['number', 'integer', 'string', 'array', 'object', 'boolean', 'null'];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n    if (group.type) RULES.types[group.type] = group;\n  });\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n  return RULES;\n};","map":{"version":3,"names":["require","ruleModules","toHash","module","exports","rules","RULES","type","ALL","KEYWORDS","TYPES","all","types","forEach","group","map","keyword","implKeywords","key","Object","keys","k","push","rule","code","implements","$comment","keywords","concat","custom"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/ajv/lib/compile/rules.js"],"sourcesContent":["'use strict';\r\n\r\nvar ruleModules = require('../dotjs')\r\n  , toHash = require('./util').toHash;\r\n\r\nmodule.exports = function rules() {\r\n  var RULES = [\r\n    { type: 'number',\r\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\r\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\r\n    { type: 'string',\r\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\r\n    { type: 'array',\r\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\r\n    { type: 'object',\r\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\r\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\r\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\r\n  ];\r\n\r\n  var ALL = [ 'type', '$comment' ];\r\n  var KEYWORDS = [\r\n    '$schema', '$id', 'id', '$data', '$async', 'title',\r\n    'description', 'default', 'definitions',\r\n    'examples', 'readOnly', 'writeOnly',\r\n    'contentMediaType', 'contentEncoding',\r\n    'additionalItems', 'then', 'else'\r\n  ];\r\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\r\n  RULES.all = toHash(ALL);\r\n  RULES.types = toHash(TYPES);\r\n\r\n  RULES.forEach(function (group) {\r\n    group.rules = group.rules.map(function (keyword) {\r\n      var implKeywords;\r\n      if (typeof keyword == 'object') {\r\n        var key = Object.keys(keyword)[0];\r\n        implKeywords = keyword[key];\r\n        keyword = key;\r\n        implKeywords.forEach(function (k) {\r\n          ALL.push(k);\r\n          RULES.all[k] = true;\r\n        });\r\n      }\r\n      ALL.push(keyword);\r\n      var rule = RULES.all[keyword] = {\r\n        keyword: keyword,\r\n        code: ruleModules[keyword],\r\n        implements: implKeywords\r\n      };\r\n      return rule;\r\n    });\r\n\r\n    RULES.all.$comment = {\r\n      keyword: '$comment',\r\n      code: ruleModules.$comment\r\n    };\r\n\r\n    if (group.type) RULES.types[group.type] = group;\r\n  });\r\n\r\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\r\n  RULES.custom = {};\r\n\r\n  return RULES;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}