{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nmodule.exports = function getPaths(path) {\n  if (path === \"/\") return {\n    paths: [\"/\"],\n    segments: [\"\"]\n  };\n  const parts = path.split(/(.*?[\\\\/]+)/);\n  const paths = [path];\n  const segments = [parts[parts.length - 1]];\n  let part = parts[parts.length - 1];\n  path = path.substr(0, path.length - part.length - 1);\n  for (let i = parts.length - 2; i > 2; i -= 2) {\n    paths.push(path);\n    part = parts[i];\n    path = path.substr(0, path.length - part.length) || \"/\";\n    segments.push(part.substr(0, part.length - 1));\n  }\n  part = parts[1];\n  segments.push(part);\n  paths.push(part);\n  return {\n    paths: paths,\n    segments: segments\n  };\n};\nmodule.exports.basename = function basename(path) {\n  const i = path.lastIndexOf(\"/\"),\n    j = path.lastIndexOf(\"\\\\\");\n  const p = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n  if (p < 0) return null;\n  const s = path.substr(p + 1);\n  return s;\n};","map":{"version":3,"names":["require","module","exports","getPaths","path","paths","segments","parts","split","length","part","substr","i","push","basename","lastIndexOf","j","p","s"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/enhanced-resolve/lib/getPaths.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nmodule.exports = function getPaths(path) {\r\n\tif (path === \"/\") return { paths: [\"/\"], segments: [\"\"] };\r\n\tconst parts = path.split(/(.*?[\\\\/]+)/);\r\n\tconst paths = [path];\r\n\tconst segments = [parts[parts.length - 1]];\r\n\tlet part = parts[parts.length - 1];\r\n\tpath = path.substr(0, path.length - part.length - 1);\r\n\tfor (let i = parts.length - 2; i > 2; i -= 2) {\r\n\t\tpaths.push(path);\r\n\t\tpart = parts[i];\r\n\t\tpath = path.substr(0, path.length - part.length) || \"/\";\r\n\t\tsegments.push(part.substr(0, part.length - 1));\r\n\t}\r\n\tpart = parts[1];\r\n\tsegments.push(part);\r\n\tpaths.push(part);\r\n\treturn {\r\n\t\tpaths: paths,\r\n\t\tsegments: segments\r\n\t};\r\n};\r\n\r\nmodule.exports.basename = function basename(path) {\r\n\tconst i = path.lastIndexOf(\"/\"),\r\n\t\tj = path.lastIndexOf(\"\\\\\");\r\n\tconst p = i < 0 ? j : j < 0 ? i : i < j ? j : i;\r\n\tif (p < 0) return null;\r\n\tconst s = path.substr(p + 1);\r\n\treturn s;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAACA,OAAA;AAEbC,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQA,CAACC,IAAI,EAAE;EACxC,IAAIA,IAAI,KAAK,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE,CAAC,GAAG,CAAC;IAAEC,QAAQ,EAAE,CAAC,EAAE;EAAE,CAAC;EACzD,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,aAAa,CAAC;EACvC,MAAMH,KAAK,GAAG,CAACD,IAAI,CAAC;EACpB,MAAME,QAAQ,GAAG,CAACC,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;EAC1C,IAAIC,IAAI,GAAGH,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;EAClCL,IAAI,GAAGA,IAAI,CAACO,MAAM,CAAC,CAAC,EAAEP,IAAI,CAACK,MAAM,GAAGC,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC;EACpD,KAAK,IAAIG,CAAC,GAAGL,KAAK,CAACE,MAAM,GAAG,CAAC,EAAEG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IAC7CP,KAAK,CAACQ,IAAI,CAACT,IAAI,CAAC;IAChBM,IAAI,GAAGH,KAAK,CAACK,CAAC,CAAC;IACfR,IAAI,GAAGA,IAAI,CAACO,MAAM,CAAC,CAAC,EAAEP,IAAI,CAACK,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,IAAI,GAAG;IACvDH,QAAQ,CAACO,IAAI,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,EAAED,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC,CAAC;EAC/C;EACAC,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC;EACfD,QAAQ,CAACO,IAAI,CAACH,IAAI,CAAC;EACnBL,KAAK,CAACQ,IAAI,CAACH,IAAI,CAAC;EAChB,OAAO;IACNL,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACX,CAAC;AACF,CAAC;AAEDL,MAAM,CAACC,OAAO,CAACY,QAAQ,GAAG,SAASA,QAAQA,CAACV,IAAI,EAAE;EACjD,MAAMQ,CAAC,GAAGR,IAAI,CAACW,WAAW,CAAC,GAAG,CAAC;IAC9BC,CAAC,GAAGZ,IAAI,CAACW,WAAW,CAAC,IAAI,CAAC;EAC3B,MAAME,CAAC,GAAGL,CAAC,GAAG,CAAC,GAAGI,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGJ,CAAC,GAAGA,CAAC,GAAGI,CAAC,GAAGA,CAAC,GAAGJ,CAAC;EAC/C,IAAIK,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI;EACtB,MAAMC,CAAC,GAAGd,IAAI,CAACO,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC;EAC5B,OAAOC,CAAC;AACT,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}