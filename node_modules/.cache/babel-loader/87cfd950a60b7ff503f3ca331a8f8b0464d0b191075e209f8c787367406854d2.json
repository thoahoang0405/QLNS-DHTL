{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar util = require('./_util');\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    macro: function (schema) {\n      var schemas = [];\n      for (var pointer in schema) schemas.push(getSchema(pointer, schema[pointer]));\n      return {\n        'allOf': schemas\n      };\n    },\n    metaSchema: {\n      type: 'object',\n      propertyNames: {\n        type: 'string',\n        format: 'json-pointer'\n      },\n      additionalProperties: util.metaSchemaRef(ajv)\n    }\n  };\n  ajv.addKeyword('deepProperties', defFunc.definition);\n  return ajv;\n};\nfunction getSchema(jsonPointer, schema) {\n  var segments = jsonPointer.split('/');\n  var rootSchema = {};\n  var pointerSchema = rootSchema;\n  for (var i = 1; i < segments.length; i++) {\n    var segment = segments[i];\n    var isLast = i == segments.length - 1;\n    segment = unescapeJsonPointer(segment);\n    var properties = pointerSchema.properties = {};\n    var items = undefined;\n    if (/[0-9]+/.test(segment)) {\n      var count = +segment;\n      items = pointerSchema.items = [];\n      while (count--) items.push({});\n    }\n    pointerSchema = isLast ? schema : {};\n    properties[segment] = pointerSchema;\n    if (items) items.push(pointerSchema);\n  }\n  return rootSchema;\n}\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}","map":{"version":3,"names":["require","util","module","exports","defFunc","ajv","definition","type","macro","schema","schemas","pointer","push","getSchema","metaSchema","propertyNames","format","additionalProperties","metaSchemaRef","addKeyword","jsonPointer","segments","split","rootSchema","pointerSchema","i","length","segment","isLast","unescapeJsonPointer","properties","items","undefined","test","count","str","replace"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/ajv-keywords/keywords/deepProperties.js"],"sourcesContent":["'use strict';\r\n\r\nvar util = require('./_util');\r\n\r\nmodule.exports = function defFunc(ajv) {\r\n  defFunc.definition = {\r\n    type: 'object',\r\n    macro: function (schema) {\r\n      var schemas = [];\r\n      for (var pointer in schema)\r\n        schemas.push(getSchema(pointer, schema[pointer]));\r\n      return {'allOf': schemas};\r\n    },\r\n    metaSchema: {\r\n      type: 'object',\r\n      propertyNames: {\r\n        type: 'string',\r\n        format: 'json-pointer'\r\n      },\r\n      additionalProperties: util.metaSchemaRef(ajv)\r\n    }\r\n  };\r\n\r\n  ajv.addKeyword('deepProperties', defFunc.definition);\r\n  return ajv;\r\n};\r\n\r\n\r\nfunction getSchema(jsonPointer, schema) {\r\n  var segments = jsonPointer.split('/');\r\n  var rootSchema = {};\r\n  var pointerSchema = rootSchema;\r\n  for (var i=1; i<segments.length; i++) {\r\n    var segment = segments[i];\r\n    var isLast = i == segments.length - 1;\r\n    segment = unescapeJsonPointer(segment);\r\n    var properties = pointerSchema.properties = {};\r\n    var items = undefined;\r\n    if (/[0-9]+/.test(segment)) {\r\n      var count = +segment;\r\n      items = pointerSchema.items = [];\r\n      while (count--) items.push({});\r\n    }\r\n    pointerSchema = isLast ? schema : {};\r\n    properties[segment] = pointerSchema;\r\n    if (items) items.push(pointerSchema);\r\n  }\r\n  return rootSchema;\r\n}\r\n\r\n\r\nfunction unescapeJsonPointer(str) {\r\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAACA,OAAA;AAEb,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE7BE,MAAM,CAACC,OAAO,GAAG,SAASC,OAAOA,CAACC,GAAG,EAAE;EACrCD,OAAO,CAACE,UAAU,GAAG;IACnBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,SAAAA,CAAUC,MAAM,EAAE;MACvB,IAAIC,OAAO,GAAG,EAAE;MAChB,KAAK,IAAIC,OAAO,IAAIF,MAAM,EACxBC,OAAO,CAACE,IAAI,CAACC,SAAS,CAACF,OAAO,EAAEF,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MACnD,OAAO;QAAC,OAAO,EAAED;MAAO,CAAC;IAC3B,CAAC;IACDI,UAAU,EAAE;MACVP,IAAI,EAAE,QAAQ;MACdQ,aAAa,EAAE;QACbR,IAAI,EAAE,QAAQ;QACdS,MAAM,EAAE;MACV,CAAC;MACDC,oBAAoB,EAAEhB,IAAI,CAACiB,aAAa,CAACb,GAAG;IAC9C;EACF,CAAC;EAEDA,GAAG,CAACc,UAAU,CAAC,gBAAgB,EAAEf,OAAO,CAACE,UAAU,CAAC;EACpD,OAAOD,GAAG;AACZ,CAAC;AAGD,SAASQ,SAASA,CAACO,WAAW,EAAEX,MAAM,EAAE;EACtC,IAAIY,QAAQ,GAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC;EACrC,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnB,IAAIC,aAAa,GAAGD,UAAU;EAC9B,KAAK,IAAIE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,IAAIE,OAAO,GAAGN,QAAQ,CAACI,CAAC,CAAC;IACzB,IAAIG,MAAM,GAAGH,CAAC,IAAIJ,QAAQ,CAACK,MAAM,GAAG,CAAC;IACrCC,OAAO,GAAGE,mBAAmB,CAACF,OAAO,CAAC;IACtC,IAAIG,UAAU,GAAGN,aAAa,CAACM,UAAU,GAAG,CAAC,CAAC;IAC9C,IAAIC,KAAK,GAAGC,SAAS;IACrB,IAAI,QAAQ,CAACC,IAAI,CAACN,OAAO,CAAC,EAAE;MAC1B,IAAIO,KAAK,GAAG,CAACP,OAAO;MACpBI,KAAK,GAAGP,aAAa,CAACO,KAAK,GAAG,EAAE;MAChC,OAAOG,KAAK,EAAE,EAAEH,KAAK,CAACnB,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC;IACAY,aAAa,GAAGI,MAAM,GAAGnB,MAAM,GAAG,CAAC,CAAC;IACpCqB,UAAU,CAACH,OAAO,CAAC,GAAGH,aAAa;IACnC,IAAIO,KAAK,EAAEA,KAAK,CAACnB,IAAI,CAACY,aAAa,CAAC;EACtC;EACA,OAAOD,UAAU;AACnB;AAGA,SAASM,mBAAmBA,CAACM,GAAG,EAAE;EAChC,OAAOA,GAAG,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AACpD"},"metadata":{},"sourceType":"script","externalDependencies":[]}