{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\nconst streamChunks = require(\"./streamChunks\");\nconst streamAndGetSourceAndMap = (inputSource, options, onChunk, onSource, onName) => {\n  let code = \"\";\n  let mappings = \"\";\n  let sources = [];\n  let sourcesContent = [];\n  let names = [];\n  const addMapping = createMappingsSerializer(Object.assign({}, options, {\n    columns: true\n  }));\n  const finalSource = !!(options && options.finalSource);\n  const {\n    generatedLine,\n    generatedColumn,\n    source\n  } = streamChunks(inputSource, options, (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) => {\n    if (chunk !== undefined) code += chunk;\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n    return onChunk(finalSource ? undefined : chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, (sourceIndex, source, sourceContent) => {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n    sources[sourceIndex] = source;\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n    return onSource(sourceIndex, source, sourceContent);\n  }, (nameIndex, name) => {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n    names[nameIndex] = name;\n    return onName(nameIndex, name);\n  });\n  const resultSource = source !== undefined ? source : code;\n  return {\n    result: {\n      generatedLine,\n      generatedColumn,\n      source: finalSource ? resultSource : undefined\n    },\n    source: resultSource,\n    map: mappings.length > 0 ? {\n      version: 3,\n      file: \"x\",\n      mappings,\n      sources,\n      sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n      names\n    } : null\n  };\n};\nmodule.exports = streamAndGetSourceAndMap;","map":{"version":3,"names":["require","createMappingsSerializer","streamChunks","streamAndGetSourceAndMap","inputSource","options","onChunk","onSource","onName","code","mappings","sources","sourcesContent","names","addMapping","Object","assign","columns","finalSource","generatedLine","generatedColumn","source","chunk","sourceIndex","originalLine","originalColumn","nameIndex","undefined","sourceContent","length","push","name","resultSource","result","map","version","file","module","exports"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/webpack-sources/lib/helpers/streamAndGetSourceAndMap.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\r\nconst streamChunks = require(\"./streamChunks\");\r\n\r\nconst streamAndGetSourceAndMap = (\r\n\tinputSource,\r\n\toptions,\r\n\tonChunk,\r\n\tonSource,\r\n\tonName\r\n) => {\r\n\tlet code = \"\";\r\n\tlet mappings = \"\";\r\n\tlet sources = [];\r\n\tlet sourcesContent = [];\r\n\tlet names = [];\r\n\tconst addMapping = createMappingsSerializer(\r\n\t\tObject.assign({}, options, { columns: true })\r\n\t);\r\n\tconst finalSource = !!(options && options.finalSource);\r\n\tconst { generatedLine, generatedColumn, source } = streamChunks(\r\n\t\tinputSource,\r\n\t\toptions,\r\n\t\t(\r\n\t\t\tchunk,\r\n\t\t\tgeneratedLine,\r\n\t\t\tgeneratedColumn,\r\n\t\t\tsourceIndex,\r\n\t\t\toriginalLine,\r\n\t\t\toriginalColumn,\r\n\t\t\tnameIndex\r\n\t\t) => {\r\n\t\t\tif (chunk !== undefined) code += chunk;\r\n\t\t\tmappings += addMapping(\r\n\t\t\t\tgeneratedLine,\r\n\t\t\t\tgeneratedColumn,\r\n\t\t\t\tsourceIndex,\r\n\t\t\t\toriginalLine,\r\n\t\t\t\toriginalColumn,\r\n\t\t\t\tnameIndex\r\n\t\t\t);\r\n\t\t\treturn onChunk(\r\n\t\t\t\tfinalSource ? undefined : chunk,\r\n\t\t\t\tgeneratedLine,\r\n\t\t\t\tgeneratedColumn,\r\n\t\t\t\tsourceIndex,\r\n\t\t\t\toriginalLine,\r\n\t\t\t\toriginalColumn,\r\n\t\t\t\tnameIndex\r\n\t\t\t);\r\n\t\t},\r\n\t\t(sourceIndex, source, sourceContent) => {\r\n\t\t\twhile (sources.length < sourceIndex) {\r\n\t\t\t\tsources.push(null);\r\n\t\t\t}\r\n\t\t\tsources[sourceIndex] = source;\r\n\t\t\tif (sourceContent !== undefined) {\r\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\r\n\t\t\t\t\tsourcesContent.push(null);\r\n\t\t\t\t}\r\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\r\n\t\t\t}\r\n\t\t\treturn onSource(sourceIndex, source, sourceContent);\r\n\t\t},\r\n\t\t(nameIndex, name) => {\r\n\t\t\twhile (names.length < nameIndex) {\r\n\t\t\t\tnames.push(null);\r\n\t\t\t}\r\n\t\t\tnames[nameIndex] = name;\r\n\t\t\treturn onName(nameIndex, name);\r\n\t\t}\r\n\t);\r\n\tconst resultSource = source !== undefined ? source : code;\r\n\treturn {\r\n\t\tresult: {\r\n\t\t\tgeneratedLine,\r\n\t\t\tgeneratedColumn,\r\n\t\t\tsource: finalSource ? resultSource : undefined\r\n\t\t},\r\n\t\tsource: resultSource,\r\n\t\tmap:\r\n\t\t\tmappings.length > 0\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tversion: 3,\r\n\t\t\t\t\t\tfile: \"x\",\r\n\t\t\t\t\t\tmappings,\r\n\t\t\t\t\t\tsources,\r\n\t\t\t\t\t\tsourcesContent:\r\n\t\t\t\t\t\t\tsourcesContent.length > 0 ? sourcesContent : undefined,\r\n\t\t\t\t\t\tnames\r\n\t\t\t\t  }\r\n\t\t\t\t: null\r\n\t};\r\n};\r\n\r\nmodule.exports = streamAndGetSourceAndMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}