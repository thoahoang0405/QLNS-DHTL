{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar util = require('./_util');\nmodule.exports = function defFunc(ajv) {\n  if (!ajv._opts.$data) {\n    console.warn('keyword select requires $data option');\n    return ajv;\n  }\n  var metaSchemaRef = util.metaSchemaRef(ajv);\n  var compiledCaseSchemas = [];\n  defFunc.definition = {\n    validate: function v(schema, data, parentSchema) {\n      if (parentSchema.selectCases === undefined) throw new Error('keyword \"selectCases\" is absent');\n      var compiled = getCompiledSchemas(parentSchema, false);\n      var validate = compiled.cases[schema];\n      if (validate === undefined) validate = compiled.default;\n      if (typeof validate == 'boolean') return validate;\n      var valid = validate(data);\n      if (!valid) v.errors = validate.errors;\n      return valid;\n    },\n    $data: true,\n    metaSchema: {\n      type: ['string', 'number', 'boolean', 'null']\n    }\n  };\n  ajv.addKeyword('select', defFunc.definition);\n  ajv.addKeyword('selectCases', {\n    compile: function (schemas, parentSchema) {\n      var compiled = getCompiledSchemas(parentSchema);\n      for (var value in schemas) compiled.cases[value] = compileOrBoolean(schemas[value]);\n      return function () {\n        return true;\n      };\n    },\n    valid: true,\n    metaSchema: {\n      type: 'object',\n      additionalProperties: metaSchemaRef\n    }\n  });\n  ajv.addKeyword('selectDefault', {\n    compile: function (schema, parentSchema) {\n      var compiled = getCompiledSchemas(parentSchema);\n      compiled.default = compileOrBoolean(schema);\n      return function () {\n        return true;\n      };\n    },\n    valid: true,\n    metaSchema: metaSchemaRef\n  });\n  return ajv;\n  function getCompiledSchemas(parentSchema, create) {\n    var compiled;\n    compiledCaseSchemas.some(function (c) {\n      if (c.parentSchema === parentSchema) {\n        compiled = c;\n        return true;\n      }\n    });\n    if (!compiled && create !== false) {\n      compiled = {\n        parentSchema: parentSchema,\n        cases: {},\n        default: true\n      };\n      compiledCaseSchemas.push(compiled);\n    }\n    return compiled;\n  }\n  function compileOrBoolean(schema) {\n    return typeof schema == 'boolean' ? schema : ajv.compile(schema);\n  }\n};","map":{"version":3,"names":["require","util","module","exports","defFunc","ajv","_opts","$data","console","warn","metaSchemaRef","compiledCaseSchemas","definition","validate","v","schema","data","parentSchema","selectCases","undefined","Error","compiled","getCompiledSchemas","cases","default","valid","errors","metaSchema","type","addKeyword","compile","schemas","value","compileOrBoolean","additionalProperties","create","some","c","push"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/ajv-keywords/keywords/select.js"],"sourcesContent":["'use strict';\r\n\r\nvar util = require('./_util');\r\n\r\nmodule.exports = function defFunc(ajv) {\r\n  if (!ajv._opts.$data) {\r\n    console.warn('keyword select requires $data option');\r\n    return ajv;\r\n  }\r\n  var metaSchemaRef = util.metaSchemaRef(ajv);\r\n  var compiledCaseSchemas = [];\r\n\r\n  defFunc.definition = {\r\n    validate: function v(schema, data, parentSchema) {\r\n      if (parentSchema.selectCases === undefined)\r\n        throw new Error('keyword \"selectCases\" is absent');\r\n      var compiled = getCompiledSchemas(parentSchema, false);\r\n      var validate = compiled.cases[schema];\r\n      if (validate === undefined) validate = compiled.default;\r\n      if (typeof validate == 'boolean') return validate;\r\n      var valid = validate(data);\r\n      if (!valid) v.errors = validate.errors;\r\n      return valid;\r\n    },\r\n    $data: true,\r\n    metaSchema: { type: ['string', 'number', 'boolean', 'null'] }\r\n  };\r\n\r\n  ajv.addKeyword('select', defFunc.definition);\r\n  ajv.addKeyword('selectCases', {\r\n    compile: function (schemas, parentSchema) {\r\n      var compiled = getCompiledSchemas(parentSchema);\r\n      for (var value in schemas)\r\n        compiled.cases[value] = compileOrBoolean(schemas[value]);\r\n      return function() { return true; };\r\n    },\r\n    valid: true,\r\n    metaSchema: {\r\n      type: 'object',\r\n      additionalProperties: metaSchemaRef\r\n    }\r\n  });\r\n  ajv.addKeyword('selectDefault', {\r\n    compile: function (schema, parentSchema) {\r\n      var compiled = getCompiledSchemas(parentSchema);\r\n      compiled.default = compileOrBoolean(schema);\r\n      return function() { return true; };\r\n    },\r\n    valid: true,\r\n    metaSchema: metaSchemaRef\r\n  });\r\n  return ajv;\r\n\r\n\r\n  function getCompiledSchemas(parentSchema, create) {\r\n    var compiled;\r\n    compiledCaseSchemas.some(function (c) {\r\n      if (c.parentSchema === parentSchema) {\r\n        compiled = c;\r\n        return true;\r\n      }\r\n    });\r\n    if (!compiled && create !== false) {\r\n      compiled = {\r\n        parentSchema: parentSchema,\r\n        cases: {},\r\n        default: true\r\n      };\r\n      compiledCaseSchemas.push(compiled);\r\n    }\r\n    return compiled;\r\n  }\r\n\r\n  function compileOrBoolean(schema) {\r\n    return typeof schema == 'boolean'\r\n            ? schema\r\n            : ajv.compile(schema);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}