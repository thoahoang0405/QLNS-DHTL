{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\nclass AsyncParallelHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onDone\n  }) {\n    return this.callTapsParallel({\n      onError: (i, err, done, doneBreak) => onError(err) + doneBreak(true),\n      onDone\n    });\n  }\n}\nconst factory = new AsyncParallelHookCodeFactory();\nconst COMPILE = function (options) {\n  factory.setup(this, options);\n  return factory.create(options);\n};\nfunction AsyncParallelHook(args = [], name = undefined) {\n  const hook = new Hook(args, name);\n  hook.constructor = AsyncParallelHook;\n  hook.compile = COMPILE;\n  hook._call = undefined;\n  hook.call = undefined;\n  return hook;\n}\nAsyncParallelHook.prototype = null;\nmodule.exports = AsyncParallelHook;","map":{"version":3,"names":["Hook","require","HookCodeFactory","AsyncParallelHookCodeFactory","content","onError","onDone","callTapsParallel","i","err","done","doneBreak","factory","COMPILE","options","setup","create","AsyncParallelHook","args","name","undefined","hook","constructor","compile","_call","call","prototype","module","exports"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/tapable/lib/AsyncParallelHook.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Hook = require(\"./Hook\");\r\nconst HookCodeFactory = require(\"./HookCodeFactory\");\r\n\r\nclass AsyncParallelHookCodeFactory extends HookCodeFactory {\r\n\tcontent({ onError, onDone }) {\r\n\t\treturn this.callTapsParallel({\r\n\t\t\tonError: (i, err, done, doneBreak) => onError(err) + doneBreak(true),\r\n\t\t\tonDone\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst factory = new AsyncParallelHookCodeFactory();\r\n\r\nconst COMPILE = function(options) {\r\n\tfactory.setup(this, options);\r\n\treturn factory.create(options);\r\n};\r\n\r\nfunction AsyncParallelHook(args = [], name = undefined) {\r\n\tconst hook = new Hook(args, name);\r\n\thook.constructor = AsyncParallelHook;\r\n\thook.compile = COMPILE;\r\n\thook._call = undefined;\r\n\thook.call = undefined;\r\n\treturn hook;\r\n}\r\n\r\nAsyncParallelHook.prototype = null;\r\n\r\nmodule.exports = AsyncParallelHook;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAEpD,MAAME,4BAA4B,SAASD,eAAe,CAAC;EAC1DE,OAAOA,CAAC;IAAEC,OAAO;IAAEC;EAAO,CAAC,EAAE;IAC5B,OAAO,IAAI,CAACC,gBAAgB,CAAC;MAC5BF,OAAO,EAAEA,CAACG,CAAC,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,KAAKN,OAAO,CAACI,GAAG,CAAC,GAAGE,SAAS,CAAC,IAAI,CAAC;MACpEL;IACD,CAAC,CAAC;EACH;AACD;AAEA,MAAMM,OAAO,GAAG,IAAIT,4BAA4B,EAAE;AAElD,MAAMU,OAAO,GAAG,SAAAA,CAASC,OAAO,EAAE;EACjCF,OAAO,CAACG,KAAK,CAAC,IAAI,EAAED,OAAO,CAAC;EAC5B,OAAOF,OAAO,CAACI,MAAM,CAACF,OAAO,CAAC;AAC/B,CAAC;AAED,SAASG,iBAAiBA,CAACC,IAAI,GAAG,EAAE,EAAEC,IAAI,GAAGC,SAAS,EAAE;EACvD,MAAMC,IAAI,GAAG,IAAIrB,IAAI,CAACkB,IAAI,EAAEC,IAAI,CAAC;EACjCE,IAAI,CAACC,WAAW,GAAGL,iBAAiB;EACpCI,IAAI,CAACE,OAAO,GAAGV,OAAO;EACtBQ,IAAI,CAACG,KAAK,GAAGJ,SAAS;EACtBC,IAAI,CAACI,IAAI,GAAGL,SAAS;EACrB,OAAOC,IAAI;AACZ;AAEAJ,iBAAiB,CAACS,SAAS,GAAG,IAAI;AAElCC,MAAM,CAACC,OAAO,GAAGX,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}