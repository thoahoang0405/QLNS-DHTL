{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{name: string|Array<string>, forceRelative: boolean}} MainFieldOptions */\n\nconst alreadyTriedMainField = Symbol(\"alreadyTriedMainField\");\nmodule.exports = class MainFieldPlugin {\n  /**\r\n   * @param {string | ResolveStepHook} source source\r\n   * @param {MainFieldOptions} options options\r\n   * @param {string | ResolveStepHook} target target\r\n   */\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n\n  /**\r\n   * @param {Resolver} resolver the resolver\r\n   * @returns {void}\r\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"MainFieldPlugin\", (request, resolveContext, callback) => {\n      if (request.path !== request.descriptionFileRoot || request[alreadyTriedMainField] === request.descriptionFilePath || !request.descriptionFilePath) return callback();\n      const filename = path.basename(request.descriptionFilePath);\n      let mainModule = DescriptionFileUtils.getField(request.descriptionFileData, this.options.name);\n      if (!mainModule || typeof mainModule !== \"string\" || mainModule === \".\" || mainModule === \"./\") {\n        return callback();\n      }\n      if (this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule)) mainModule = \"./\" + mainModule;\n      const obj = {\n        ...request,\n        request: mainModule,\n        module: false,\n        directory: mainModule.endsWith(\"/\"),\n        [alreadyTriedMainField]: request.descriptionFilePath\n      };\n      return resolver.doResolve(target, obj, \"use \" + mainModule + \" from \" + this.options.name + \" in \" + filename, resolveContext, callback);\n    });\n  }\n};","map":{"version":3,"names":["path","require","DescriptionFileUtils","alreadyTriedMainField","Symbol","module","exports","MainFieldPlugin","constructor","source","options","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileRoot","descriptionFilePath","filename","basename","mainModule","getField","descriptionFileData","name","forceRelative","test","obj","directory","endsWith","doResolve"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/enhanced-resolve/lib/MainFieldPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\r\n\r\n/** @typedef {import(\"./Resolver\")} Resolver */\r\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\r\n/** @typedef {{name: string|Array<string>, forceRelative: boolean}} MainFieldOptions */\r\n\r\nconst alreadyTriedMainField = Symbol(\"alreadyTriedMainField\");\r\n\r\nmodule.exports = class MainFieldPlugin {\r\n\t/**\r\n\t * @param {string | ResolveStepHook} source source\r\n\t * @param {MainFieldOptions} options options\r\n\t * @param {string | ResolveStepHook} target target\r\n\t */\r\n\tconstructor(source, options, target) {\r\n\t\tthis.source = source;\r\n\t\tthis.options = options;\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Resolver} resolver the resolver\r\n\t * @returns {void}\r\n\t */\r\n\tapply(resolver) {\r\n\t\tconst target = resolver.ensureHook(this.target);\r\n\t\tresolver\r\n\t\t\t.getHook(this.source)\r\n\t\t\t.tapAsync(\"MainFieldPlugin\", (request, resolveContext, callback) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\trequest.path !== request.descriptionFileRoot ||\r\n\t\t\t\t\trequest[alreadyTriedMainField] === request.descriptionFilePath ||\r\n\t\t\t\t\t!request.descriptionFilePath\r\n\t\t\t\t)\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\tconst filename = path.basename(request.descriptionFilePath);\r\n\t\t\t\tlet mainModule = DescriptionFileUtils.getField(\r\n\t\t\t\t\trequest.descriptionFileData,\r\n\t\t\t\t\tthis.options.name\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!mainModule ||\r\n\t\t\t\t\ttypeof mainModule !== \"string\" ||\r\n\t\t\t\t\tmainModule === \".\" ||\r\n\t\t\t\t\tmainModule === \"./\"\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule))\r\n\t\t\t\t\tmainModule = \"./\" + mainModule;\r\n\t\t\t\tconst obj = {\r\n\t\t\t\t\t...request,\r\n\t\t\t\t\trequest: mainModule,\r\n\t\t\t\t\tmodule: false,\r\n\t\t\t\t\tdirectory: mainModule.endsWith(\"/\"),\r\n\t\t\t\t\t[alreadyTriedMainField]: request.descriptionFilePath\r\n\t\t\t\t};\r\n\t\t\t\treturn resolver.doResolve(\r\n\t\t\t\t\ttarget,\r\n\t\t\t\t\tobj,\r\n\t\t\t\t\t\"use \" +\r\n\t\t\t\t\t\tmainModule +\r\n\t\t\t\t\t\t\" from \" +\r\n\t\t\t\t\t\tthis.options.name +\r\n\t\t\t\t\t\t\" in \" +\r\n\t\t\t\t\t\tfilename,\r\n\t\t\t\t\tresolveContext,\r\n\t\t\t\t\tcallback\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t}\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;;AAE9D;AACA;AACA;;AAEA,MAAME,qBAAqB,GAAGC,MAAM,CAAC,uBAAuB,CAAC;AAE7DC,MAAM,CAACC,OAAO,GAAG,MAAMC,eAAe,CAAC;EACtC;AACD;AACA;AACA;AACA;EACCC,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACpC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACN,MAAM,CAAC,CACpBO,QAAQ,CAAC,iBAAiB,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACnE,IACCF,OAAO,CAACjB,IAAI,KAAKiB,OAAO,CAACG,mBAAmB,IAC5CH,OAAO,CAACd,qBAAqB,CAAC,KAAKc,OAAO,CAACI,mBAAmB,IAC9D,CAACJ,OAAO,CAACI,mBAAmB,EAE5B,OAAOF,QAAQ,EAAE;MAClB,MAAMG,QAAQ,GAAGtB,IAAI,CAACuB,QAAQ,CAACN,OAAO,CAACI,mBAAmB,CAAC;MAC3D,IAAIG,UAAU,GAAGtB,oBAAoB,CAACuB,QAAQ,CAC7CR,OAAO,CAACS,mBAAmB,EAC3B,IAAI,CAAChB,OAAO,CAACiB,IAAI,CACjB;MAED,IACC,CAACH,UAAU,IACX,OAAOA,UAAU,KAAK,QAAQ,IAC9BA,UAAU,KAAK,GAAG,IAClBA,UAAU,KAAK,IAAI,EAClB;QACD,OAAOL,QAAQ,EAAE;MAClB;MACA,IAAI,IAAI,CAACT,OAAO,CAACkB,aAAa,IAAI,CAAC,UAAU,CAACC,IAAI,CAACL,UAAU,CAAC,EAC7DA,UAAU,GAAG,IAAI,GAAGA,UAAU;MAC/B,MAAMM,GAAG,GAAG;QACX,GAAGb,OAAO;QACVA,OAAO,EAAEO,UAAU;QACnBnB,MAAM,EAAE,KAAK;QACb0B,SAAS,EAAEP,UAAU,CAACQ,QAAQ,CAAC,GAAG,CAAC;QACnC,CAAC7B,qBAAqB,GAAGc,OAAO,CAACI;MAClC,CAAC;MACD,OAAOR,QAAQ,CAACoB,SAAS,CACxBtB,MAAM,EACNmB,GAAG,EACH,MAAM,GACLN,UAAU,GACV,QAAQ,GACR,IAAI,CAACd,OAAO,CAACiB,IAAI,GACjB,MAAM,GACNL,QAAQ,EACTJ,cAAc,EACdC,QAAQ,CACR;IACF,CAAC,CAAC;EACJ;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}