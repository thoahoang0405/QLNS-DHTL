{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n  path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _mergeStream() {\n  const data = _interopRequireDefault(require('merge-stream'));\n  _mergeStream = function () {\n    return data;\n  };\n  return data;\n}\nvar _types = require('../types');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// How long to wait for the child process to terminate\n// after CHILD_MESSAGE_END before sending force exiting.\nconst FORCE_EXIT_DELAY = 500;\n/* istanbul ignore next */\n\nconst emptyMethod = () => {};\nclass BaseWorkerPool {\n  constructor(workerPath, options) {\n    _defineProperty(this, '_stderr', void 0);\n    _defineProperty(this, '_stdout', void 0);\n    _defineProperty(this, '_options', void 0);\n    _defineProperty(this, '_workers', void 0);\n    this._options = options;\n    this._workers = new Array(options.numWorkers);\n    if (!path().isAbsolute(workerPath)) {\n      workerPath = require.resolve(workerPath);\n    }\n    const stdout = (0, _mergeStream().default)();\n    const stderr = (0, _mergeStream().default)();\n    const {\n      forkOptions,\n      maxRetries,\n      resourceLimits,\n      setupArgs\n    } = options;\n    for (let i = 0; i < options.numWorkers; i++) {\n      const workerOptions = {\n        forkOptions,\n        maxRetries,\n        resourceLimits,\n        setupArgs,\n        workerId: i,\n        workerPath\n      };\n      const worker = this.createWorker(workerOptions);\n      const workerStdout = worker.getStdout();\n      const workerStderr = worker.getStderr();\n      if (workerStdout) {\n        stdout.add(workerStdout);\n      }\n      if (workerStderr) {\n        stderr.add(workerStderr);\n      }\n      this._workers[i] = worker;\n    }\n    this._stdout = stdout;\n    this._stderr = stderr;\n  }\n  getStderr() {\n    return this._stderr;\n  }\n  getStdout() {\n    return this._stdout;\n  }\n  getWorkers() {\n    return this._workers;\n  }\n  getWorkerById(workerId) {\n    return this._workers[workerId];\n  }\n  createWorker(_workerOptions) {\n    throw Error('Missing method createWorker in WorkerPool');\n  }\n  async end() {\n    // We do not cache the request object here. If so, it would only be only\n    // processed by one of the workers, and we want them all to close.\n    const workerExitPromises = this._workers.map(async worker => {\n      worker.send([_types.CHILD_MESSAGE_END, false], emptyMethod, emptyMethod, emptyMethod); // Schedule a force exit in case worker fails to exit gracefully so\n      // await worker.waitForExit() never takes longer than FORCE_EXIT_DELAY\n\n      let forceExited = false;\n      const forceExitTimeout = setTimeout(() => {\n        worker.forceExit();\n        forceExited = true;\n      }, FORCE_EXIT_DELAY);\n      await worker.waitForExit(); // Worker ideally exited gracefully, don't send force exit then\n\n      clearTimeout(forceExitTimeout);\n      return forceExited;\n    });\n    const workerExits = await Promise.all(workerExitPromises);\n    return workerExits.reduce((result, forceExited) => ({\n      forceExited: result.forceExited || forceExited\n    }), {\n      forceExited: false\n    });\n  }\n}\nexports.default = BaseWorkerPool;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","path","data","_interopRequireWildcard","require","_mergeStream","_interopRequireDefault","_types","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","FORCE_EXIT_DELAY","emptyMethod","BaseWorkerPool","constructor","workerPath","options","_options","_workers","Array","numWorkers","isAbsolute","resolve","stdout","stderr","forkOptions","maxRetries","resourceLimits","setupArgs","i","workerOptions","workerId","worker","createWorker","workerStdout","getStdout","workerStderr","getStderr","add","_stdout","_stderr","getWorkers","getWorkerById","_workerOptions","Error","end","workerExitPromises","map","send","CHILD_MESSAGE_END","forceExited","forceExitTimeout","setTimeout","forceExit","waitForExit","clearTimeout","workerExits","Promise","all","reduce","result"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/jest-worker/build/base/BaseWorkerPool.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nfunction path() {\r\n  const data = _interopRequireWildcard(require('path'));\r\n\r\n  path = function () {\r\n    return data;\r\n  };\r\n\r\n  return data;\r\n}\r\n\r\nfunction _mergeStream() {\r\n  const data = _interopRequireDefault(require('merge-stream'));\r\n\r\n  _mergeStream = function () {\r\n    return data;\r\n  };\r\n\r\n  return data;\r\n}\r\n\r\nvar _types = require('../types');\r\n\r\nfunction _interopRequireDefault(obj) {\r\n  return obj && obj.__esModule ? obj : {default: obj};\r\n}\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) {\r\n  if (typeof WeakMap !== 'function') return null;\r\n  var cacheBabelInterop = new WeakMap();\r\n  var cacheNodeInterop = new WeakMap();\r\n  return (_getRequireWildcardCache = function (nodeInterop) {\r\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\r\n  })(nodeInterop);\r\n}\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) {\r\n  if (!nodeInterop && obj && obj.__esModule) {\r\n    return obj;\r\n  }\r\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\r\n    return {default: obj};\r\n  }\r\n  var cache = _getRequireWildcardCache(nodeInterop);\r\n  if (cache && cache.has(obj)) {\r\n    return cache.get(obj);\r\n  }\r\n  var newObj = {};\r\n  var hasPropertyDescriptor =\r\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n  for (var key in obj) {\r\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n      var desc = hasPropertyDescriptor\r\n        ? Object.getOwnPropertyDescriptor(obj, key)\r\n        : null;\r\n      if (desc && (desc.get || desc.set)) {\r\n        Object.defineProperty(newObj, key, desc);\r\n      } else {\r\n        newObj[key] = obj[key];\r\n      }\r\n    }\r\n  }\r\n  newObj.default = obj;\r\n  if (cache) {\r\n    cache.set(obj, newObj);\r\n  }\r\n  return newObj;\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n  return obj;\r\n}\r\n\r\n// How long to wait for the child process to terminate\r\n// after CHILD_MESSAGE_END before sending force exiting.\r\nconst FORCE_EXIT_DELAY = 500;\r\n/* istanbul ignore next */\r\n\r\nconst emptyMethod = () => {};\r\n\r\nclass BaseWorkerPool {\r\n  constructor(workerPath, options) {\r\n    _defineProperty(this, '_stderr', void 0);\r\n\r\n    _defineProperty(this, '_stdout', void 0);\r\n\r\n    _defineProperty(this, '_options', void 0);\r\n\r\n    _defineProperty(this, '_workers', void 0);\r\n\r\n    this._options = options;\r\n    this._workers = new Array(options.numWorkers);\r\n\r\n    if (!path().isAbsolute(workerPath)) {\r\n      workerPath = require.resolve(workerPath);\r\n    }\r\n\r\n    const stdout = (0, _mergeStream().default)();\r\n    const stderr = (0, _mergeStream().default)();\r\n    const {forkOptions, maxRetries, resourceLimits, setupArgs} = options;\r\n\r\n    for (let i = 0; i < options.numWorkers; i++) {\r\n      const workerOptions = {\r\n        forkOptions,\r\n        maxRetries,\r\n        resourceLimits,\r\n        setupArgs,\r\n        workerId: i,\r\n        workerPath\r\n      };\r\n      const worker = this.createWorker(workerOptions);\r\n      const workerStdout = worker.getStdout();\r\n      const workerStderr = worker.getStderr();\r\n\r\n      if (workerStdout) {\r\n        stdout.add(workerStdout);\r\n      }\r\n\r\n      if (workerStderr) {\r\n        stderr.add(workerStderr);\r\n      }\r\n\r\n      this._workers[i] = worker;\r\n    }\r\n\r\n    this._stdout = stdout;\r\n    this._stderr = stderr;\r\n  }\r\n\r\n  getStderr() {\r\n    return this._stderr;\r\n  }\r\n\r\n  getStdout() {\r\n    return this._stdout;\r\n  }\r\n\r\n  getWorkers() {\r\n    return this._workers;\r\n  }\r\n\r\n  getWorkerById(workerId) {\r\n    return this._workers[workerId];\r\n  }\r\n\r\n  createWorker(_workerOptions) {\r\n    throw Error('Missing method createWorker in WorkerPool');\r\n  }\r\n\r\n  async end() {\r\n    // We do not cache the request object here. If so, it would only be only\r\n    // processed by one of the workers, and we want them all to close.\r\n    const workerExitPromises = this._workers.map(async worker => {\r\n      worker.send(\r\n        [_types.CHILD_MESSAGE_END, false],\r\n        emptyMethod,\r\n        emptyMethod,\r\n        emptyMethod\r\n      ); // Schedule a force exit in case worker fails to exit gracefully so\r\n      // await worker.waitForExit() never takes longer than FORCE_EXIT_DELAY\r\n\r\n      let forceExited = false;\r\n      const forceExitTimeout = setTimeout(() => {\r\n        worker.forceExit();\r\n        forceExited = true;\r\n      }, FORCE_EXIT_DELAY);\r\n      await worker.waitForExit(); // Worker ideally exited gracefully, don't send force exit then\r\n\r\n      clearTimeout(forceExitTimeout);\r\n      return forceExited;\r\n    });\r\n\r\n    const workerExits = await Promise.all(workerExitPromises);\r\n    return workerExits.reduce(\r\n      (result, forceExited) => ({\r\n        forceExited: result.forceExited || forceExited\r\n      }),\r\n      {\r\n        forceExited: false\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexports.default = BaseWorkerPool;\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,SAASC,IAAIA,CAAA,EAAG;EACd,MAAMC,IAAI,GAAGC,uBAAuB,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErDH,IAAI,GAAG,SAAAA,CAAA,EAAY;IACjB,OAAOC,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;AAEA,SAASG,YAAYA,CAAA,EAAG;EACtB,MAAMH,IAAI,GAAGI,sBAAsB,CAACF,OAAO,CAAC,cAAc,CAAC,CAAC;EAE5DC,YAAY,GAAG,SAAAA,CAAA,EAAY;IACzB,OAAOH,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;AAEA,IAAIK,MAAM,GAAGH,OAAO,CAAC,UAAU,CAAC;AAEhC,SAASE,sBAAsBA,CAACE,GAAG,EAAE;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAACR,OAAO,EAAEQ;EAAG,CAAC;AACrD;AAEA,SAASE,wBAAwBA,CAACC,WAAW,EAAE;EAC7C,IAAI,OAAOC,OAAO,KAAK,UAAU,EAAE,OAAO,IAAI;EAC9C,IAAIC,iBAAiB,GAAG,IAAID,OAAO,EAAE;EACrC,IAAIE,gBAAgB,GAAG,IAAIF,OAAO,EAAE;EACpC,OAAO,CAACF,wBAAwB,GAAG,SAAAA,CAAUC,WAAW,EAAE;IACxD,OAAOA,WAAW,GAAGG,gBAAgB,GAAGD,iBAAiB;EAC3D,CAAC,EAAEF,WAAW,CAAC;AACjB;AAEA,SAASR,uBAAuBA,CAACK,GAAG,EAAEG,WAAW,EAAE;EACjD,IAAI,CAACA,WAAW,IAAIH,GAAG,IAAIA,GAAG,CAACC,UAAU,EAAE;IACzC,OAAOD,GAAG;EACZ;EACA,IAAIA,GAAG,KAAK,IAAI,IAAK,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,UAAW,EAAE;IAC1E,OAAO;MAACR,OAAO,EAAEQ;IAAG,CAAC;EACvB;EACA,IAAIO,KAAK,GAAGL,wBAAwB,CAACC,WAAW,CAAC;EACjD,IAAII,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACR,GAAG,CAAC,EAAE;IAC3B,OAAOO,KAAK,CAACE,GAAG,CAACT,GAAG,CAAC;EACvB;EACA,IAAIU,MAAM,GAAG,CAAC,CAAC;EACf,IAAIC,qBAAqB,GACvBvB,MAAM,CAACC,cAAc,IAAID,MAAM,CAACwB,wBAAwB;EAC1D,KAAK,IAAIC,GAAG,IAAIb,GAAG,EAAE;IACnB,IAAIa,GAAG,KAAK,SAAS,IAAIzB,MAAM,CAAC0B,SAAS,CAACC,cAAc,CAACC,IAAI,CAAChB,GAAG,EAAEa,GAAG,CAAC,EAAE;MACvE,IAAII,IAAI,GAAGN,qBAAqB,GAC5BvB,MAAM,CAACwB,wBAAwB,CAACZ,GAAG,EAAEa,GAAG,CAAC,GACzC,IAAI;MACR,IAAII,IAAI,KAAKA,IAAI,CAACR,GAAG,IAAIQ,IAAI,CAACC,GAAG,CAAC,EAAE;QAClC9B,MAAM,CAACC,cAAc,CAACqB,MAAM,EAAEG,GAAG,EAAEI,IAAI,CAAC;MAC1C,CAAC,MAAM;QACLP,MAAM,CAACG,GAAG,CAAC,GAAGb,GAAG,CAACa,GAAG,CAAC;MACxB;IACF;EACF;EACAH,MAAM,CAAClB,OAAO,GAAGQ,GAAG;EACpB,IAAIO,KAAK,EAAE;IACTA,KAAK,CAACW,GAAG,CAAClB,GAAG,EAAEU,MAAM,CAAC;EACxB;EACA,OAAOA,MAAM;AACf;AAEA,SAASS,eAAeA,CAACnB,GAAG,EAAEa,GAAG,EAAEtB,KAAK,EAAE;EACxC,IAAIsB,GAAG,IAAIb,GAAG,EAAE;IACdZ,MAAM,CAACC,cAAc,CAACW,GAAG,EAAEa,GAAG,EAAE;MAC9BtB,KAAK,EAAEA,KAAK;MACZ6B,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,MAAM;IACLtB,GAAG,CAACa,GAAG,CAAC,GAAGtB,KAAK;EAClB;EACA,OAAOS,GAAG;AACZ;;AAEA;AACA;AACA,MAAMuB,gBAAgB,GAAG,GAAG;AAC5B;;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM,CAAC,CAAC;AAE5B,MAAMC,cAAc,CAAC;EACnBC,WAAWA,CAACC,UAAU,EAAEC,OAAO,EAAE;IAC/BT,eAAe,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAExCA,eAAe,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAExCA,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCA,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzC,IAAI,CAACU,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACE,QAAQ,GAAG,IAAIC,KAAK,CAACH,OAAO,CAACI,UAAU,CAAC;IAE7C,IAAI,CAACvC,IAAI,EAAE,CAACwC,UAAU,CAACN,UAAU,CAAC,EAAE;MAClCA,UAAU,GAAG/B,OAAO,CAACsC,OAAO,CAACP,UAAU,CAAC;IAC1C;IAEA,MAAMQ,MAAM,GAAG,CAAC,CAAC,EAAEtC,YAAY,EAAE,CAACL,OAAO,GAAG;IAC5C,MAAM4C,MAAM,GAAG,CAAC,CAAC,EAAEvC,YAAY,EAAE,CAACL,OAAO,GAAG;IAC5C,MAAM;MAAC6C,WAAW;MAAEC,UAAU;MAAEC,cAAc;MAAEC;IAAS,CAAC,GAAGZ,OAAO;IAEpE,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,OAAO,CAACI,UAAU,EAAES,CAAC,EAAE,EAAE;MAC3C,MAAMC,aAAa,GAAG;QACpBL,WAAW;QACXC,UAAU;QACVC,cAAc;QACdC,SAAS;QACTG,QAAQ,EAAEF,CAAC;QACXd;MACF,CAAC;MACD,MAAMiB,MAAM,GAAG,IAAI,CAACC,YAAY,CAACH,aAAa,CAAC;MAC/C,MAAMI,YAAY,GAAGF,MAAM,CAACG,SAAS,EAAE;MACvC,MAAMC,YAAY,GAAGJ,MAAM,CAACK,SAAS,EAAE;MAEvC,IAAIH,YAAY,EAAE;QAChBX,MAAM,CAACe,GAAG,CAACJ,YAAY,CAAC;MAC1B;MAEA,IAAIE,YAAY,EAAE;QAChBZ,MAAM,CAACc,GAAG,CAACF,YAAY,CAAC;MAC1B;MAEA,IAAI,CAAClB,QAAQ,CAACW,CAAC,CAAC,GAAGG,MAAM;IAC3B;IAEA,IAAI,CAACO,OAAO,GAAGhB,MAAM;IACrB,IAAI,CAACiB,OAAO,GAAGhB,MAAM;EACvB;EAEAa,SAASA,CAAA,EAAG;IACV,OAAO,IAAI,CAACG,OAAO;EACrB;EAEAL,SAASA,CAAA,EAAG;IACV,OAAO,IAAI,CAACI,OAAO;EACrB;EAEAE,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAACvB,QAAQ;EACtB;EAEAwB,aAAaA,CAACX,QAAQ,EAAE;IACtB,OAAO,IAAI,CAACb,QAAQ,CAACa,QAAQ,CAAC;EAChC;EAEAE,YAAYA,CAACU,cAAc,EAAE;IAC3B,MAAMC,KAAK,CAAC,2CAA2C,CAAC;EAC1D;EAEA,MAAMC,GAAGA,CAAA,EAAG;IACV;IACA;IACA,MAAMC,kBAAkB,GAAG,IAAI,CAAC5B,QAAQ,CAAC6B,GAAG,CAAC,MAAMf,MAAM,IAAI;MAC3DA,MAAM,CAACgB,IAAI,CACT,CAAC7D,MAAM,CAAC8D,iBAAiB,EAAE,KAAK,CAAC,EACjCrC,WAAW,EACXA,WAAW,EACXA,WAAW,CACZ,CAAC,CAAC;MACH;;MAEA,IAAIsC,WAAW,GAAG,KAAK;MACvB,MAAMC,gBAAgB,GAAGC,UAAU,CAAC,MAAM;QACxCpB,MAAM,CAACqB,SAAS,EAAE;QAClBH,WAAW,GAAG,IAAI;MACpB,CAAC,EAAEvC,gBAAgB,CAAC;MACpB,MAAMqB,MAAM,CAACsB,WAAW,EAAE,CAAC,CAAC;;MAE5BC,YAAY,CAACJ,gBAAgB,CAAC;MAC9B,OAAOD,WAAW;IACpB,CAAC,CAAC;IAEF,MAAMM,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACZ,kBAAkB,CAAC;IACzD,OAAOU,WAAW,CAACG,MAAM,CACvB,CAACC,MAAM,EAAEV,WAAW,MAAM;MACxBA,WAAW,EAAEU,MAAM,CAACV,WAAW,IAAIA;IACrC,CAAC,CAAC,EACF;MACEA,WAAW,EAAE;IACf,CAAC,CACF;EACH;AACF;AAEAxE,OAAO,CAACE,OAAO,GAAGiC,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}