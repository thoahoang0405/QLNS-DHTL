{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nvar _FifoQueue = _interopRequireDefault(require('./FifoQueue'));\nvar _types = require('./types');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nclass Farm {\n  constructor(_numOfWorkers, _callback, options = {}) {\n    var _options$workerSchedu, _options$taskQueue;\n    _defineProperty(this, '_computeWorkerKey', void 0);\n    _defineProperty(this, '_workerSchedulingPolicy', void 0);\n    _defineProperty(this, '_cacheKeys', Object.create(null));\n    _defineProperty(this, '_locks', []);\n    _defineProperty(this, '_offset', 0);\n    _defineProperty(this, '_taskQueue', void 0);\n    this._numOfWorkers = _numOfWorkers;\n    this._callback = _callback;\n    this._computeWorkerKey = options.computeWorkerKey;\n    this._workerSchedulingPolicy = (_options$workerSchedu = options.workerSchedulingPolicy) !== null && _options$workerSchedu !== void 0 ? _options$workerSchedu : 'round-robin';\n    this._taskQueue = (_options$taskQueue = options.taskQueue) !== null && _options$taskQueue !== void 0 ? _options$taskQueue : new _FifoQueue.default();\n  }\n  doWork(method, ...args) {\n    const customMessageListeners = new Set();\n    const addCustomMessageListener = listener => {\n      customMessageListeners.add(listener);\n      return () => {\n        customMessageListeners.delete(listener);\n      };\n    };\n    const onCustomMessage = message => {\n      customMessageListeners.forEach(listener => listener(message));\n    };\n    const promise = new Promise(\n    // Bind args to this function so it won't reference to the parent scope.\n    // This prevents a memory leak in v8, because otherwise the function will\n    // retaine args for the closure.\n    ((args, resolve, reject) => {\n      const computeWorkerKey = this._computeWorkerKey;\n      const request = [_types.CHILD_MESSAGE_CALL, false, method, args];\n      let worker = null;\n      let hash = null;\n      if (computeWorkerKey) {\n        hash = computeWorkerKey.call(this, method, ...args);\n        worker = hash == null ? null : this._cacheKeys[hash];\n      }\n      const onStart = worker => {\n        if (hash != null) {\n          this._cacheKeys[hash] = worker;\n        }\n      };\n      const onEnd = (error, result) => {\n        customMessageListeners.clear();\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      };\n      const task = {\n        onCustomMessage,\n        onEnd,\n        onStart,\n        request\n      };\n      if (worker) {\n        this._taskQueue.enqueue(task, worker.getWorkerId());\n        this._process(worker.getWorkerId());\n      } else {\n        this._push(task);\n      }\n    }).bind(null, args));\n    promise.UNSTABLE_onCustomMessage = addCustomMessageListener;\n    return promise;\n  }\n  _process(workerId) {\n    if (this._isLocked(workerId)) {\n      return this;\n    }\n    const task = this._taskQueue.dequeue(workerId);\n    if (!task) {\n      return this;\n    }\n    if (task.request[1]) {\n      throw new Error('Queue implementation returned processed task');\n    } // Reference the task object outside so it won't be retained by onEnd,\n    // and other properties of the task object, such as task.request can be\n    // garbage collected.\n\n    const taskOnEnd = task.onEnd;\n    const onEnd = (error, result) => {\n      taskOnEnd(error, result);\n      this._unlock(workerId);\n      this._process(workerId);\n    };\n    task.request[1] = true;\n    this._lock(workerId);\n    this._callback(workerId, task.request, task.onStart, onEnd, task.onCustomMessage);\n    return this;\n  }\n  _push(task) {\n    this._taskQueue.enqueue(task);\n    const offset = this._getNextWorkerOffset();\n    for (let i = 0; i < this._numOfWorkers; i++) {\n      this._process((offset + i) % this._numOfWorkers);\n      if (task.request[1]) {\n        break;\n      }\n    }\n    return this;\n  }\n  _getNextWorkerOffset() {\n    switch (this._workerSchedulingPolicy) {\n      case 'in-order':\n        return 0;\n      case 'round-robin':\n        return this._offset++;\n    }\n  }\n  _lock(workerId) {\n    this._locks[workerId] = true;\n  }\n  _unlock(workerId) {\n    this._locks[workerId] = false;\n  }\n  _isLocked(workerId) {\n    return this._locks[workerId];\n  }\n}\nexports.default = Farm;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_FifoQueue","_interopRequireDefault","require","_types","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","Farm","constructor","_numOfWorkers","_callback","options","_options$workerSchedu","_options$taskQueue","create","_computeWorkerKey","computeWorkerKey","_workerSchedulingPolicy","workerSchedulingPolicy","_taskQueue","taskQueue","doWork","method","args","customMessageListeners","Set","addCustomMessageListener","listener","add","delete","onCustomMessage","message","forEach","promise","Promise","resolve","reject","request","CHILD_MESSAGE_CALL","worker","hash","call","_cacheKeys","onStart","onEnd","error","result","clear","task","enqueue","getWorkerId","_process","_push","bind","UNSTABLE_onCustomMessage","workerId","_isLocked","dequeue","Error","taskOnEnd","_unlock","_lock","offset","_getNextWorkerOffset","i","_offset","_locks"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/jest-worker/build/Farm.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _FifoQueue = _interopRequireDefault(require('./FifoQueue'));\r\n\r\nvar _types = require('./types');\r\n\r\nfunction _interopRequireDefault(obj) {\r\n  return obj && obj.__esModule ? obj : {default: obj};\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n  return obj;\r\n}\r\n\r\nclass Farm {\r\n  constructor(_numOfWorkers, _callback, options = {}) {\r\n    var _options$workerSchedu, _options$taskQueue;\r\n\r\n    _defineProperty(this, '_computeWorkerKey', void 0);\r\n\r\n    _defineProperty(this, '_workerSchedulingPolicy', void 0);\r\n\r\n    _defineProperty(this, '_cacheKeys', Object.create(null));\r\n\r\n    _defineProperty(this, '_locks', []);\r\n\r\n    _defineProperty(this, '_offset', 0);\r\n\r\n    _defineProperty(this, '_taskQueue', void 0);\r\n\r\n    this._numOfWorkers = _numOfWorkers;\r\n    this._callback = _callback;\r\n    this._computeWorkerKey = options.computeWorkerKey;\r\n    this._workerSchedulingPolicy =\r\n      (_options$workerSchedu = options.workerSchedulingPolicy) !== null &&\r\n      _options$workerSchedu !== void 0\r\n        ? _options$workerSchedu\r\n        : 'round-robin';\r\n    this._taskQueue =\r\n      (_options$taskQueue = options.taskQueue) !== null &&\r\n      _options$taskQueue !== void 0\r\n        ? _options$taskQueue\r\n        : new _FifoQueue.default();\r\n  }\r\n\r\n  doWork(method, ...args) {\r\n    const customMessageListeners = new Set();\r\n\r\n    const addCustomMessageListener = listener => {\r\n      customMessageListeners.add(listener);\r\n      return () => {\r\n        customMessageListeners.delete(listener);\r\n      };\r\n    };\r\n\r\n    const onCustomMessage = message => {\r\n      customMessageListeners.forEach(listener => listener(message));\r\n    };\r\n\r\n    const promise = new Promise( // Bind args to this function so it won't reference to the parent scope.\r\n      // This prevents a memory leak in v8, because otherwise the function will\r\n      // retaine args for the closure.\r\n      ((args, resolve, reject) => {\r\n        const computeWorkerKey = this._computeWorkerKey;\r\n        const request = [_types.CHILD_MESSAGE_CALL, false, method, args];\r\n        let worker = null;\r\n        let hash = null;\r\n\r\n        if (computeWorkerKey) {\r\n          hash = computeWorkerKey.call(this, method, ...args);\r\n          worker = hash == null ? null : this._cacheKeys[hash];\r\n        }\r\n\r\n        const onStart = worker => {\r\n          if (hash != null) {\r\n            this._cacheKeys[hash] = worker;\r\n          }\r\n        };\r\n\r\n        const onEnd = (error, result) => {\r\n          customMessageListeners.clear();\r\n\r\n          if (error) {\r\n            reject(error);\r\n          } else {\r\n            resolve(result);\r\n          }\r\n        };\r\n\r\n        const task = {\r\n          onCustomMessage,\r\n          onEnd,\r\n          onStart,\r\n          request\r\n        };\r\n\r\n        if (worker) {\r\n          this._taskQueue.enqueue(task, worker.getWorkerId());\r\n\r\n          this._process(worker.getWorkerId());\r\n        } else {\r\n          this._push(task);\r\n        }\r\n      }).bind(null, args)\r\n    );\r\n    promise.UNSTABLE_onCustomMessage = addCustomMessageListener;\r\n    return promise;\r\n  }\r\n\r\n  _process(workerId) {\r\n    if (this._isLocked(workerId)) {\r\n      return this;\r\n    }\r\n\r\n    const task = this._taskQueue.dequeue(workerId);\r\n\r\n    if (!task) {\r\n      return this;\r\n    }\r\n\r\n    if (task.request[1]) {\r\n      throw new Error('Queue implementation returned processed task');\r\n    } // Reference the task object outside so it won't be retained by onEnd,\r\n    // and other properties of the task object, such as task.request can be\r\n    // garbage collected.\r\n\r\n    const taskOnEnd = task.onEnd;\r\n\r\n    const onEnd = (error, result) => {\r\n      taskOnEnd(error, result);\r\n\r\n      this._unlock(workerId);\r\n\r\n      this._process(workerId);\r\n    };\r\n\r\n    task.request[1] = true;\r\n\r\n    this._lock(workerId);\r\n\r\n    this._callback(\r\n      workerId,\r\n      task.request,\r\n      task.onStart,\r\n      onEnd,\r\n      task.onCustomMessage\r\n    );\r\n\r\n    return this;\r\n  }\r\n\r\n  _push(task) {\r\n    this._taskQueue.enqueue(task);\r\n\r\n    const offset = this._getNextWorkerOffset();\r\n\r\n    for (let i = 0; i < this._numOfWorkers; i++) {\r\n      this._process((offset + i) % this._numOfWorkers);\r\n\r\n      if (task.request[1]) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  _getNextWorkerOffset() {\r\n    switch (this._workerSchedulingPolicy) {\r\n      case 'in-order':\r\n        return 0;\r\n\r\n      case 'round-robin':\r\n        return this._offset++;\r\n    }\r\n  }\r\n\r\n  _lock(workerId) {\r\n    this._locks[workerId] = true;\r\n  }\r\n\r\n  _unlock(workerId) {\r\n    this._locks[workerId] = false;\r\n  }\r\n\r\n  _isLocked(workerId) {\r\n    return this._locks[workerId];\r\n  }\r\n}\r\n\r\nexports.default = Farm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}