{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + $lvl + ' = ' + it.util.getData($schema.$data, $dataLvl, it.dataPathArr) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + $valid + '; if (' + $schemaValue + ' === false || ' + $schemaValue + ' === undefined) ' + $valid + ' = true; else if (typeof ' + $schemaValue + ' != \\'boolean\\') ' + $valid + ' = false; else { ';\n    }\n    out += ' var i = ' + $data + '.length , ' + $valid + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || $typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0)) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + $data + '[i], ' + $data + '[j])) { ' + $valid + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + $data + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + it.util[$method]($itemType, 'item', it.opts.strictNumbers, true) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + $valid + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + $valid + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + 'uniqueItems' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + $schemaPath;\n        } else {\n          out += '' + $schema;\n        }\n        out += '         , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + __err + ']); ';\n      } else {\n        out += ' validate.errors = [' + __err + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n};","map":{"version":3,"names":["require","module","exports","generate_uniqueItems","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$isData","$schemaValue","getData","dataPathArr","uniqueItems","$itemType","items","type","$typeIsArray","Array","isArray","indexOf","$method","strictNumbers","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","async"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/ajv/lib/dotjs/uniqueItems.js"],"sourcesContent":["'use strict';\r\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\r\n  var out = ' ';\r\n  var $lvl = it.level;\r\n  var $dataLvl = it.dataLevel;\r\n  var $schema = it.schema[$keyword];\r\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\r\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\r\n  var $breakOnError = !it.opts.allErrors;\r\n  var $data = 'data' + ($dataLvl || '');\r\n  var $valid = 'valid' + $lvl;\r\n  var $isData = it.opts.$data && $schema && $schema.$data,\r\n    $schemaValue;\r\n  if ($isData) {\r\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\r\n    $schemaValue = 'schema' + $lvl;\r\n  } else {\r\n    $schemaValue = $schema;\r\n  }\r\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\r\n    if ($isData) {\r\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\r\n    }\r\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\r\n    var $itemType = it.schema.items && it.schema.items.type,\r\n      $typeIsArray = Array.isArray($itemType);\r\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\r\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\r\n    } else {\r\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\r\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\r\n      out += ' if (' + (it.util[$method]($itemType, 'item', it.opts.strictNumbers, true)) + ') continue; ';\r\n      if ($typeIsArray) {\r\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\r\n      }\r\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\r\n    }\r\n    out += ' } ';\r\n    if ($isData) {\r\n      out += '  }  ';\r\n    }\r\n    out += ' if (!' + ($valid) + ') {   ';\r\n    var $$outStack = $$outStack || [];\r\n    $$outStack.push(out);\r\n    out = ''; /* istanbul ignore else */\r\n    if (it.createErrors !== false) {\r\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\r\n      if (it.opts.messages !== false) {\r\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\r\n      }\r\n      if (it.opts.verbose) {\r\n        out += ' , schema:  ';\r\n        if ($isData) {\r\n          out += 'validate.schema' + ($schemaPath);\r\n        } else {\r\n          out += '' + ($schema);\r\n        }\r\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\r\n      }\r\n      out += ' } ';\r\n    } else {\r\n      out += ' {} ';\r\n    }\r\n    var __err = out;\r\n    out = $$outStack.pop();\r\n    if (!it.compositeRule && $breakOnError) {\r\n      /* istanbul ignore if */\r\n      if (it.async) {\r\n        out += ' throw new ValidationError([' + (__err) + ']); ';\r\n      } else {\r\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\r\n      }\r\n    } else {\r\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\r\n    }\r\n    out += ' } ';\r\n    if ($breakOnError) {\r\n      out += ' else { ';\r\n    }\r\n  } else {\r\n    if ($breakOnError) {\r\n      out += ' if (true) { ';\r\n    }\r\n  }\r\n  return out;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}