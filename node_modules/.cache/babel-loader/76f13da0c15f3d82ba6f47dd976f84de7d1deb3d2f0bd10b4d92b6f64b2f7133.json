{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class DescriptionFilePlugin {\n  /**\r\n   * @param {string | ResolveStepHook} source source\r\n   * @param {string[]} filenames filenames\r\n   * @param {boolean} pathIsFile pathIsFile\r\n   * @param {string | ResolveStepHook} target target\r\n   */\n  constructor(source, filenames, pathIsFile, target) {\n    this.source = source;\n    this.filenames = filenames;\n    this.pathIsFile = pathIsFile;\n    this.target = target;\n  }\n\n  /**\r\n   * @param {Resolver} resolver the resolver\r\n   * @returns {void}\r\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"DescriptionFilePlugin\", (request, resolveContext, callback) => {\n      const path = request.path;\n      if (!path) return callback();\n      const directory = this.pathIsFile ? DescriptionFileUtils.cdUp(path) : path;\n      if (!directory) return callback();\n      DescriptionFileUtils.loadDescriptionFile(resolver, directory, this.filenames, request.descriptionFilePath ? {\n        path: request.descriptionFilePath,\n        content: request.descriptionFileData,\n        directory: /** @type {string} */request.descriptionFileRoot\n      } : undefined, resolveContext, (err, result) => {\n        if (err) return callback(err);\n        if (!result) {\n          if (resolveContext.log) resolveContext.log(`No description file found in ${directory} or above`);\n          return callback();\n        }\n        const relativePath = \".\" + path.substr(result.directory.length).replace(/\\\\/g, \"/\");\n        const obj = {\n          ...request,\n          descriptionFilePath: result.path,\n          descriptionFileData: result.content,\n          descriptionFileRoot: result.directory,\n          relativePath: relativePath\n        };\n        resolver.doResolve(target, obj, \"using description file: \" + result.path + \" (relative path: \" + relativePath + \")\", resolveContext, (err, result) => {\n          if (err) return callback(err);\n\n          // Don't allow other processing\n          if (result === undefined) return callback(null, null);\n          callback(null, result);\n        });\n      });\n    });\n  }\n};","map":{"version":3,"names":["DescriptionFileUtils","require","module","exports","DescriptionFilePlugin","constructor","source","filenames","pathIsFile","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","path","directory","cdUp","loadDescriptionFile","descriptionFilePath","content","descriptionFileData","descriptionFileRoot","undefined","err","result","log","relativePath","substr","length","replace","obj","doResolve"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\r\n\r\n/** @typedef {import(\"./Resolver\")} Resolver */\r\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\r\n\r\nmodule.exports = class DescriptionFilePlugin {\r\n\t/**\r\n\t * @param {string | ResolveStepHook} source source\r\n\t * @param {string[]} filenames filenames\r\n\t * @param {boolean} pathIsFile pathIsFile\r\n\t * @param {string | ResolveStepHook} target target\r\n\t */\r\n\tconstructor(source, filenames, pathIsFile, target) {\r\n\t\tthis.source = source;\r\n\t\tthis.filenames = filenames;\r\n\t\tthis.pathIsFile = pathIsFile;\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Resolver} resolver the resolver\r\n\t * @returns {void}\r\n\t */\r\n\tapply(resolver) {\r\n\t\tconst target = resolver.ensureHook(this.target);\r\n\t\tresolver\r\n\t\t\t.getHook(this.source)\r\n\t\t\t.tapAsync(\r\n\t\t\t\t\"DescriptionFilePlugin\",\r\n\t\t\t\t(request, resolveContext, callback) => {\r\n\t\t\t\t\tconst path = request.path;\r\n\t\t\t\t\tif (!path) return callback();\r\n\t\t\t\t\tconst directory = this.pathIsFile\r\n\t\t\t\t\t\t? DescriptionFileUtils.cdUp(path)\r\n\t\t\t\t\t\t: path;\r\n\t\t\t\t\tif (!directory) return callback();\r\n\t\t\t\t\tDescriptionFileUtils.loadDescriptionFile(\r\n\t\t\t\t\t\tresolver,\r\n\t\t\t\t\t\tdirectory,\r\n\t\t\t\t\t\tthis.filenames,\r\n\t\t\t\t\t\trequest.descriptionFilePath\r\n\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\tpath: request.descriptionFilePath,\r\n\t\t\t\t\t\t\t\t\tcontent: request.descriptionFileData,\r\n\t\t\t\t\t\t\t\t\tdirectory: /** @type {string} */ (request.descriptionFileRoot)\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t(err, result) => {\r\n\t\t\t\t\t\t\tif (err) return callback(err);\r\n\t\t\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\t\t\tif (resolveContext.log)\r\n\t\t\t\t\t\t\t\t\tresolveContext.log(\r\n\t\t\t\t\t\t\t\t\t\t`No description file found in ${directory} or above`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\treturn callback();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst relativePath =\r\n\t\t\t\t\t\t\t\t\".\" + path.substr(result.directory.length).replace(/\\\\/g, \"/\");\r\n\t\t\t\t\t\t\tconst obj = {\r\n\t\t\t\t\t\t\t\t...request,\r\n\t\t\t\t\t\t\t\tdescriptionFilePath: result.path,\r\n\t\t\t\t\t\t\t\tdescriptionFileData: result.content,\r\n\t\t\t\t\t\t\t\tdescriptionFileRoot: result.directory,\r\n\t\t\t\t\t\t\t\trelativePath: relativePath\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tresolver.doResolve(\r\n\t\t\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\t\t\tobj,\r\n\t\t\t\t\t\t\t\t\"using description file: \" +\r\n\t\t\t\t\t\t\t\t\tresult.path +\r\n\t\t\t\t\t\t\t\t\t\" (relative path: \" +\r\n\t\t\t\t\t\t\t\t\trelativePath +\r\n\t\t\t\t\t\t\t\t\t\")\",\r\n\t\t\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\t\t\t(err, result) => {\r\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\r\n\r\n\t\t\t\t\t\t\t\t\t// Don't allow other processing\r\n\t\t\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\r\n\t\t\t\t\t\t\t\t\tcallback(null, result);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;;AAE9D;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,MAAMC,qBAAqB,CAAC;EAC5C;AACD;AACA;AACA;AACA;AACA;EACCC,WAAWA,CAACC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAE;IAClD,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACP,MAAM,CAAC,CACpBQ,QAAQ,CACR,uBAAuB,EACvB,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACtC,MAAMC,IAAI,GAAGH,OAAO,CAACG,IAAI;MACzB,IAAI,CAACA,IAAI,EAAE,OAAOD,QAAQ,EAAE;MAC5B,MAAME,SAAS,GAAG,IAAI,CAACX,UAAU,GAC9BR,oBAAoB,CAACoB,IAAI,CAACF,IAAI,CAAC,GAC/BA,IAAI;MACP,IAAI,CAACC,SAAS,EAAE,OAAOF,QAAQ,EAAE;MACjCjB,oBAAoB,CAACqB,mBAAmB,CACvCV,QAAQ,EACRQ,SAAS,EACT,IAAI,CAACZ,SAAS,EACdQ,OAAO,CAACO,mBAAmB,GACxB;QACAJ,IAAI,EAAEH,OAAO,CAACO,mBAAmB;QACjCC,OAAO,EAAER,OAAO,CAACS,mBAAmB;QACpCL,SAAS,EAAE,qBAAuBJ,OAAO,CAACU;MAC1C,CAAC,GACDC,SAAS,EACZV,cAAc,EACd,CAACW,GAAG,EAAEC,MAAM,KAAK;QAChB,IAAID,GAAG,EAAE,OAAOV,QAAQ,CAACU,GAAG,CAAC;QAC7B,IAAI,CAACC,MAAM,EAAE;UACZ,IAAIZ,cAAc,CAACa,GAAG,EACrBb,cAAc,CAACa,GAAG,CAChB,gCAA+BV,SAAU,WAAU,CACpD;UACF,OAAOF,QAAQ,EAAE;QAClB;QACA,MAAMa,YAAY,GACjB,GAAG,GAAGZ,IAAI,CAACa,MAAM,CAACH,MAAM,CAACT,SAAS,CAACa,MAAM,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;QAC/D,MAAMC,GAAG,GAAG;UACX,GAAGnB,OAAO;UACVO,mBAAmB,EAAEM,MAAM,CAACV,IAAI;UAChCM,mBAAmB,EAAEI,MAAM,CAACL,OAAO;UACnCE,mBAAmB,EAAEG,MAAM,CAACT,SAAS;UACrCW,YAAY,EAAEA;QACf,CAAC;QACDnB,QAAQ,CAACwB,SAAS,CACjB1B,MAAM,EACNyB,GAAG,EACH,0BAA0B,GACzBN,MAAM,CAACV,IAAI,GACX,mBAAmB,GACnBY,YAAY,GACZ,GAAG,EACJd,cAAc,EACd,CAACW,GAAG,EAAEC,MAAM,KAAK;UAChB,IAAID,GAAG,EAAE,OAAOV,QAAQ,CAACU,GAAG,CAAC;;UAE7B;UACA,IAAIC,MAAM,KAAKF,SAAS,EAAE,OAAOT,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;UACrDA,QAAQ,CAAC,IAAI,EAAEW,MAAM,CAAC;QACvB,CAAC,CACD;MACF,CAAC,CACD;IACF,CAAC,CACD;EACH;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}