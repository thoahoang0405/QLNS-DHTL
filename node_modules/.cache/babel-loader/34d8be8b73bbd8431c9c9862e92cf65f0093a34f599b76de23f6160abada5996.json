{"ast":null,"code":"'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'number',\n    macro: function (schema, parentSchema) {\n      var min = schema[0],\n        max = schema[1],\n        exclusive = parentSchema.exclusiveRange;\n      validateRangeSchema(min, max, exclusive);\n      return exclusive === true ? {\n        exclusiveMinimum: min,\n        exclusiveMaximum: max\n      } : {\n        minimum: min,\n        maximum: max\n      };\n    },\n    metaSchema: {\n      type: 'array',\n      minItems: 2,\n      maxItems: 2,\n      items: {\n        type: 'number'\n      }\n    }\n  };\n  ajv.addKeyword('range', defFunc.definition);\n  ajv.addKeyword('exclusiveRange');\n  return ajv;\n  function validateRangeSchema(min, max, exclusive) {\n    if (exclusive !== undefined && typeof exclusive != 'boolean') throw new Error('Invalid schema for exclusiveRange keyword, should be boolean');\n    if (min > max || exclusive && min == max) throw new Error('There are no numbers in range');\n  }\n};","map":{"version":3,"names":["module","exports","defFunc","ajv","definition","type","macro","schema","parentSchema","min","max","exclusive","exclusiveRange","validateRangeSchema","exclusiveMinimum","exclusiveMaximum","minimum","maximum","metaSchema","minItems","maxItems","items","addKeyword","undefined","Error"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/ajv-keywords/keywords/range.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = function defFunc(ajv) {\r\n  defFunc.definition = {\r\n    type: 'number',\r\n    macro: function (schema, parentSchema) {\r\n      var min = schema[0]\r\n        , max = schema[1]\r\n        , exclusive = parentSchema.exclusiveRange;\r\n\r\n      validateRangeSchema(min, max, exclusive);\r\n\r\n      return exclusive === true\r\n              ? {exclusiveMinimum: min, exclusiveMaximum: max}\r\n              : {minimum: min, maximum: max};\r\n    },\r\n    metaSchema: {\r\n      type: 'array',\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: { type: 'number' }\r\n    }\r\n  };\r\n\r\n  ajv.addKeyword('range', defFunc.definition);\r\n  ajv.addKeyword('exclusiveRange');\r\n  return ajv;\r\n\r\n  function validateRangeSchema(min, max, exclusive) {\r\n    if (exclusive !== undefined && typeof exclusive != 'boolean')\r\n      throw new Error('Invalid schema for exclusiveRange keyword, should be boolean');\r\n\r\n    if (min > max || (exclusive && min == max))\r\n      throw new Error('There are no numbers in range');\r\n  }\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,OAAOA,CAACC,GAAG,EAAE;EACrCD,OAAO,CAACE,UAAU,GAAG;IACnBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,SAAAA,CAAUC,MAAM,EAAEC,YAAY,EAAE;MACrC,IAAIC,GAAG,GAAGF,MAAM,CAAC,CAAC,CAAC;QACfG,GAAG,GAAGH,MAAM,CAAC,CAAC,CAAC;QACfI,SAAS,GAAGH,YAAY,CAACI,cAAc;MAE3CC,mBAAmB,CAACJ,GAAG,EAAEC,GAAG,EAAEC,SAAS,CAAC;MAExC,OAAOA,SAAS,KAAK,IAAI,GACf;QAACG,gBAAgB,EAAEL,GAAG;QAAEM,gBAAgB,EAAEL;MAAG,CAAC,GAC9C;QAACM,OAAO,EAAEP,GAAG;QAAEQ,OAAO,EAAEP;MAAG,CAAC;IACxC,CAAC;IACDQ,UAAU,EAAE;MACVb,IAAI,EAAE,OAAO;MACbc,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE;QAAEhB,IAAI,EAAE;MAAS;IAC1B;EACF,CAAC;EAEDF,GAAG,CAACmB,UAAU,CAAC,OAAO,EAAEpB,OAAO,CAACE,UAAU,CAAC;EAC3CD,GAAG,CAACmB,UAAU,CAAC,gBAAgB,CAAC;EAChC,OAAOnB,GAAG;EAEV,SAASU,mBAAmBA,CAACJ,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAE;IAChD,IAAIA,SAAS,KAAKY,SAAS,IAAI,OAAOZ,SAAS,IAAI,SAAS,EAC1D,MAAM,IAAIa,KAAK,CAAC,8DAA8D,CAAC;IAEjF,IAAIf,GAAG,GAAGC,GAAG,IAAKC,SAAS,IAAIF,GAAG,IAAIC,GAAI,EACxC,MAAM,IAAIc,KAAK,CAAC,+BAA+B,CAAC;EACpD;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}