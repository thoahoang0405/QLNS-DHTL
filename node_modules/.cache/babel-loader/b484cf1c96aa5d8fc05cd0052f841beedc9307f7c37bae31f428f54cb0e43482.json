{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n\"use strict\";\n\nconst getGeneratedSourceInfo = require(\"./getGeneratedSourceInfo\");\nconst splitIntoLines = require(\"./splitIntoLines\");\nconst streamChunksOfRawSource = (source, onChunk, onSource, onName) => {\n  let line = 1;\n  const matches = splitIntoLines(source);\n  let match;\n  for (match of matches) {\n    onChunk(match, line, 0, -1, -1, -1, -1);\n    line++;\n  }\n  return matches.length === 0 || match.endsWith(\"\\n\") ? {\n    generatedLine: matches.length + 1,\n    generatedColumn: 0\n  } : {\n    generatedLine: matches.length,\n    generatedColumn: match.length\n  };\n};\nmodule.exports = (source, onChunk, onSource, onName, finalSource) => {\n  return finalSource ? getGeneratedSourceInfo(source) : streamChunksOfRawSource(source, onChunk, onSource, onName);\n};","map":{"version":3,"names":["getGeneratedSourceInfo","require","splitIntoLines","streamChunksOfRawSource","source","onChunk","onSource","onName","line","matches","match","length","endsWith","generatedLine","generatedColumn","module","exports","finalSource"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/webpack-sources/lib/helpers/streamChunksOfRawSource.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst getGeneratedSourceInfo = require(\"./getGeneratedSourceInfo\");\r\nconst splitIntoLines = require(\"./splitIntoLines\");\r\n\r\nconst streamChunksOfRawSource = (source, onChunk, onSource, onName) => {\r\n\tlet line = 1;\r\n\tconst matches = splitIntoLines(source);\r\n\tlet match;\r\n\tfor (match of matches) {\r\n\t\tonChunk(match, line, 0, -1, -1, -1, -1);\r\n\t\tline++;\r\n\t}\r\n\treturn matches.length === 0 || match.endsWith(\"\\n\")\r\n\t\t? {\r\n\t\t\t\tgeneratedLine: matches.length + 1,\r\n\t\t\t\tgeneratedColumn: 0\r\n\t\t  }\r\n\t\t: {\r\n\t\t\t\tgeneratedLine: matches.length,\r\n\t\t\t\tgeneratedColumn: match.length\r\n\t\t  };\r\n};\r\n\r\nmodule.exports = (source, onChunk, onSource, onName, finalSource) => {\r\n\treturn finalSource\r\n\t\t? getGeneratedSourceInfo(source)\r\n\t\t: streamChunksOfRawSource(source, onChunk, onSource, onName);\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAClE,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAElD,MAAME,uBAAuB,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EACtE,IAAIC,IAAI,GAAG,CAAC;EACZ,MAAMC,OAAO,GAAGP,cAAc,CAACE,MAAM,CAAC;EACtC,IAAIM,KAAK;EACT,KAAKA,KAAK,IAAID,OAAO,EAAE;IACtBJ,OAAO,CAACK,KAAK,EAAEF,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvCA,IAAI,EAAE;EACP;EACA,OAAOC,OAAO,CAACE,MAAM,KAAK,CAAC,IAAID,KAAK,CAACE,QAAQ,CAAC,IAAI,CAAC,GAChD;IACAC,aAAa,EAAEJ,OAAO,CAACE,MAAM,GAAG,CAAC;IACjCG,eAAe,EAAE;EACjB,CAAC,GACD;IACAD,aAAa,EAAEJ,OAAO,CAACE,MAAM;IAC7BG,eAAe,EAAEJ,KAAK,CAACC;EACvB,CAAC;AACL,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAG,CAACZ,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEU,WAAW,KAAK;EACpE,OAAOA,WAAW,GACfjB,sBAAsB,CAACI,MAAM,CAAC,GAC9BD,uBAAuB,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,CAAC;AAC9D,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}