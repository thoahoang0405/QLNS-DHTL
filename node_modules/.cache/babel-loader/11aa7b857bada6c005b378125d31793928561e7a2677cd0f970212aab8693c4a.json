{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\n// macOS, Linux, and Windows all rely on these errors\nconst EXPECTED_ERRORS = new Set([\"EINVAL\", \"ENOENT\"]);\n\n// On Windows there is also this error in some cases\nif (process.platform === \"win32\") EXPECTED_ERRORS.add(\"UNKNOWN\");\nclass LinkResolver {\n  constructor() {\n    this.cache = new Map();\n  }\n\n  /**\r\n   * @param {string} file path to file or directory\r\n   * @returns {string[]} array of file and all symlinks contributed in the resolving process (first item is the resolved file)\r\n   */\n  resolve(file) {\n    const cacheEntry = this.cache.get(file);\n    if (cacheEntry !== undefined) {\n      return cacheEntry;\n    }\n    const parent = path.dirname(file);\n    if (parent === file) {\n      // At root of filesystem there can't be a link\n      const result = Object.freeze([file]);\n      this.cache.set(file, result);\n      return result;\n    }\n    // resolve the parent directory to find links there and get the real path\n    const parentResolved = this.resolve(parent);\n    let realFile = file;\n\n    // is the parent directory really somewhere else?\n    if (parentResolved[0] !== parent) {\n      // get the real location of file\n      const basename = path.basename(file);\n      realFile = path.resolve(parentResolved[0], basename);\n    }\n    // try to read the link content\n    try {\n      const linkContent = fs.readlinkSync(realFile);\n\n      // resolve the link content relative to the parent directory\n      const resolvedLink = path.resolve(parentResolved[0], linkContent);\n\n      // recursive resolve the link content for more links in the structure\n      const linkResolved = this.resolve(resolvedLink);\n\n      // merge parent and link resolve results\n      let result;\n      if (linkResolved.length > 1 && parentResolved.length > 1) {\n        // when both contain links we need to duplicate them with a Set\n        const resultSet = new Set(linkResolved);\n        // add the link\n        resultSet.add(realFile);\n        // add all symlinks of the parent\n        for (let i = 1; i < parentResolved.length; i++) {\n          resultSet.add(parentResolved[i]);\n        }\n        result = Object.freeze(Array.from(resultSet));\n      } else if (parentResolved.length > 1) {\n        // we have links in the parent but not for the link content location\n        result = parentResolved.slice();\n        result[0] = linkResolved[0];\n        // add the link\n        result.push(realFile);\n        Object.freeze(result);\n      } else if (linkResolved.length > 1) {\n        // we can return the link content location result\n        result = linkResolved.slice();\n        // add the link\n        result.push(realFile);\n        Object.freeze(result);\n      } else {\n        // neither link content location nor parent have links\n        // this link is the only link here\n        result = Object.freeze([\n        // the resolve real location\n        linkResolved[0],\n        // add the link\n        realFile]);\n      }\n      this.cache.set(file, result);\n      return result;\n    } catch (e) {\n      if (!EXPECTED_ERRORS.has(e.code)) {\n        throw e;\n      }\n      // no link\n      const result = parentResolved.slice();\n      result[0] = realFile;\n      Object.freeze(result);\n      this.cache.set(file, result);\n      return result;\n    }\n  }\n}\nmodule.exports = LinkResolver;","map":{"version":3,"names":["require","fs","path","EXPECTED_ERRORS","Set","process","platform","add","LinkResolver","constructor","cache","Map","resolve","file","cacheEntry","get","undefined","parent","dirname","result","Object","freeze","set","parentResolved","realFile","basename","linkContent","readlinkSync","resolvedLink","linkResolved","length","resultSet","i","Array","from","slice","push","e","has","code","module","exports"],"sources":["D:/dhtl/ptda/UI/QLNS-DHTL/node_modules/watchpack/lib/LinkResolver.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\n\r\n// macOS, Linux, and Windows all rely on these errors\r\nconst EXPECTED_ERRORS = new Set([\"EINVAL\", \"ENOENT\"]);\r\n\r\n// On Windows there is also this error in some cases\r\nif (process.platform === \"win32\") EXPECTED_ERRORS.add(\"UNKNOWN\");\r\n\r\nclass LinkResolver {\r\n\tconstructor() {\r\n\t\tthis.cache = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} file path to file or directory\r\n\t * @returns {string[]} array of file and all symlinks contributed in the resolving process (first item is the resolved file)\r\n\t */\r\n\tresolve(file) {\r\n\t\tconst cacheEntry = this.cache.get(file);\r\n\t\tif (cacheEntry !== undefined) {\r\n\t\t\treturn cacheEntry;\r\n\t\t}\r\n\t\tconst parent = path.dirname(file);\r\n\t\tif (parent === file) {\r\n\t\t\t// At root of filesystem there can't be a link\r\n\t\t\tconst result = Object.freeze([file]);\r\n\t\t\tthis.cache.set(file, result);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t// resolve the parent directory to find links there and get the real path\r\n\t\tconst parentResolved = this.resolve(parent);\r\n\t\tlet realFile = file;\r\n\r\n\t\t// is the parent directory really somewhere else?\r\n\t\tif (parentResolved[0] !== parent) {\r\n\t\t\t// get the real location of file\r\n\t\t\tconst basename = path.basename(file);\r\n\t\t\trealFile = path.resolve(parentResolved[0], basename);\r\n\t\t}\r\n\t\t// try to read the link content\r\n\t\ttry {\r\n\t\t\tconst linkContent = fs.readlinkSync(realFile);\r\n\r\n\t\t\t// resolve the link content relative to the parent directory\r\n\t\t\tconst resolvedLink = path.resolve(parentResolved[0], linkContent);\r\n\r\n\t\t\t// recursive resolve the link content for more links in the structure\r\n\t\t\tconst linkResolved = this.resolve(resolvedLink);\r\n\r\n\t\t\t// merge parent and link resolve results\r\n\t\t\tlet result;\r\n\t\t\tif (linkResolved.length > 1 && parentResolved.length > 1) {\r\n\t\t\t\t// when both contain links we need to duplicate them with a Set\r\n\t\t\t\tconst resultSet = new Set(linkResolved);\r\n\t\t\t\t// add the link\r\n\t\t\t\tresultSet.add(realFile);\r\n\t\t\t\t// add all symlinks of the parent\r\n\t\t\t\tfor (let i = 1; i < parentResolved.length; i++) {\r\n\t\t\t\t\tresultSet.add(parentResolved[i]);\r\n\t\t\t\t}\r\n\t\t\t\tresult = Object.freeze(Array.from(resultSet));\r\n\t\t\t} else if (parentResolved.length > 1) {\r\n\t\t\t\t// we have links in the parent but not for the link content location\r\n\t\t\t\tresult = parentResolved.slice();\r\n\t\t\t\tresult[0] = linkResolved[0];\r\n\t\t\t\t// add the link\r\n\t\t\t\tresult.push(realFile);\r\n\t\t\t\tObject.freeze(result);\r\n\t\t\t} else if (linkResolved.length > 1) {\r\n\t\t\t\t// we can return the link content location result\r\n\t\t\t\tresult = linkResolved.slice();\r\n\t\t\t\t// add the link\r\n\t\t\t\tresult.push(realFile);\r\n\t\t\t\tObject.freeze(result);\r\n\t\t\t} else {\r\n\t\t\t\t// neither link content location nor parent have links\r\n\t\t\t\t// this link is the only link here\r\n\t\t\t\tresult = Object.freeze([\r\n\t\t\t\t\t// the resolve real location\r\n\t\t\t\t\tlinkResolved[0],\r\n\t\t\t\t\t// add the link\r\n\t\t\t\t\trealFile\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tthis.cache.set(file, result);\r\n\t\t\treturn result;\r\n\t\t} catch (e) {\r\n\t\t\tif (!EXPECTED_ERRORS.has(e.code)) {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t\t// no link\r\n\t\t\tconst result = parentResolved.slice();\r\n\t\t\tresult[0] = realFile;\r\n\t\t\tObject.freeze(result);\r\n\t\t\tthis.cache.set(file, result);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\nmodule.exports = LinkResolver;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}